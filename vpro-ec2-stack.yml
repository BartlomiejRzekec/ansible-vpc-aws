- name: Creating bastion host
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import vpro-stack vars
      include_vars: vars/vpro-stack_setup
    - name: import vpc-out vars
      include_vars: vars/vpc_output_vars

    - name: create key pair
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out
    - name: save private key
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./vprokey.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: SG for Load Balancer
      ec2_group:
        name: vproLB-sg
        description: allow 80
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproLB_sg_out
    - name: SG for vprofile stack
      ec2_group:
        name: vproStack-sg
        description: allow ssh and 80
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
         -  proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproLB_sg_out.group_id}}"
         -  proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vproStack_sg_out
    - name: update SG for vprofile stack
      ec2_group:
        name: vproStack-sg
        description: allow ssh and 80
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
         - proto: all
           group_id: "{{vproStack_sg_out.group_id}}"

    - name: Creating Nginx instance
      ec2:
        key_name: vprokey
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        group_id: "{{vproStack_sg_out.group_id}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
      register: web01_out
    - name: Creating Tomcat instance
      ec2:
        key_name: vprokey
        region: "{{region}}"
        vpc_subnet_id: "{{privsub2}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        group_id: "{{vproStack_sg_out.group_id}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
      register: app01_out
    - name: Creating Memcache instance
      ec2:
        key_name: vprokey
        region: "{{region}}"
        vpc_subnet_id: "{{privsub3}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        group_id: "{{vproStack_sg_out.group_id}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
      register: mc01_out
    - name: Creating RabbitMQ instance
      ec2:
        key_name: vprokey
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        group_id: "{{vproStack_sg_out.group_id}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
      register: rmq01_out
    - name: Creating Mysql instance
      ec2:
        key_name: vprokey
        region: "{{region}}"
        vpc_subnet_id: "{{privsub1}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        group_id: "{{vproStack_sg_out.group_id}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
      register: db01_out

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "{{region}}"
        state: present
        instance_ids:
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{vproLB_sg_out.group_id}}"
        subnets:
          - "{{pubsub1}}"
          - "{{pubsub2}}"
          - "{{pubsub3}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80

    - debug:
        var: db01_out

    - name: Insert IPs to inventory
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_ip}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}

    - name: Copy login key to provision
      copy:
        src: vprokey.pem
        dest: provision-stack/vprokey.pem
        mode: '0400'